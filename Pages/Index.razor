@page "/"
@using Microsoft.AspNetCore.Authorization
@using UniKeyManagement.Frontend.Services
@attribute [Authorize]
@inject ISetupService SetupService
@inject NavigationManager Navigation
@inject ILogger<Index> Logger

<PageTitle>Home - UniKey Management</PageTitle>

<div class="home-container">
    @if (isCheckingSetup)
    {
        <div class="loading-container">
            <div class="spinner"></div>
            <p>Loading...</p>
        </div>
    }
    else if (!isSetupCompleted)
    {
        <div class="setup-required-container">
            <h1>Setup Required</h1>
            <p>The system has not been set up yet.</p>

            @if (isSuperAdmin)
            {
                <p>As a SuperAdmin, you can complete the initial setup.</p>
                <button class="btn btn-primary" @onclick="NavigateToSetup">
                    Go to Setup
                </button>
            }
            else
            {
                <p>Please contact your system administrator to complete the setup.</p>
            }
        </div>
    }
    else
    {
        <div class="dashboard-container">
            <h1>Welcome to UniKey Management System</h1>
            <p>University Multi-Campus Key Management System</p>

            <div class="dashboard-grid">
                <div class="dashboard-card">
                    <h3>Key Management</h3>
                    <p>Manage keys, key systems, and assignments</p>
                    <button class="btn btn-secondary" disabled>Coming Soon</button>
                </div>

                <div class="dashboard-card">
                    <h3>Campus Management</h3>
                    <p>Manage campuses and buildings</p>
                    <button class="btn btn-secondary" disabled>Coming Soon</button>
                </div>

                <div class="dashboard-card">
                    <h3>Reports</h3>
                    <p>Generate reports and analytics</p>
                    <button class="btn btn-secondary" disabled>Coming Soon</button>
                </div>

                <div class="dashboard-card">
                    <h3>Audit Logs</h3>
                    <p>View system activity and changes</p>
                    <button class="btn btn-secondary" disabled>Coming Soon</button>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private bool isCheckingSetup = true;
    private bool isSetupCompleted = false;
    private bool isSuperAdmin = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            isSetupCompleted = await SetupService.IsSetupCompletedAsync();
            isSuperAdmin = SetupService.IsSuperAdmin();

            // If setup is not completed and user is SuperAdmin, redirect to setup
            if (!isSetupCompleted && isSuperAdmin)
            {
                Navigation.NavigateTo("/setup");
            }
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error checking setup status");
        }
        finally
        {
            isCheckingSetup = false;
        }
    }

    private void NavigateToSetup()
    {
        Navigation.NavigateTo("/setup");
    }
}
