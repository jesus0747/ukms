class t{constructor(){this.auth={signIn:async()=>{throw new Error("Not implemented")},signOut:async()=>{throw new Error("Not implemented")},createUser:async()=>{throw new Error("Not implemented")},updatePassword:async()=>{throw new Error("Not implemented")},getCurrentUser:async()=>{throw new Error("Not implemented")}},this.users={getAll:async()=>{throw new Error("Not implemented")},getById:async()=>{throw new Error("Not implemented")},getByNetId:async()=>{throw new Error("Not implemented")},create:async()=>{throw new Error("Not implemented")},update:async()=>{throw new Error("Not implemented")},delete:async()=>{throw new Error("Not implemented")},count:async()=>{throw new Error("Not implemented")}},this.campuses={getAll:async()=>{throw new Error("Not implemented")},getById:async()=>{throw new Error("Not implemented")},create:async()=>{throw new Error("Not implemented")},update:async()=>{throw new Error("Not implemented")},delete:async()=>{throw new Error("Not implemented")}},this.buildings={getAll:async()=>{throw new Error("Not implemented")},getByCampusId:async()=>{throw new Error("Not implemented")},getById:async()=>{throw new Error("Not implemented")},create:async()=>{throw new Error("Not implemented")},update:async()=>{throw new Error("Not implemented")},delete:async()=>{throw new Error("Not implemented")}},this.keySystems={getAll:async()=>{throw new Error("Not implemented")},getById:async()=>{throw new Error("Not implemented")},create:async()=>{throw new Error("Not implemented")},update:async()=>{throw new Error("Not implemented")},delete:async()=>{throw new Error("Not implemented")}},this.keys={getAll:async()=>{throw new Error("Not implemented")},getById:async()=>{throw new Error("Not implemented")},getBySystemId:async()=>{throw new Error("Not implemented")},getByBuildingId:async()=>{throw new Error("Not implemented")},create:async()=>{throw new Error("Not implemented")},update:async()=>{throw new Error("Not implemented")},delete:async()=>{throw new Error("Not implemented")},search:async()=>{throw new Error("Not implemented")}},this.keyHistory={getAll:async()=>{throw new Error("Not implemented")},getByKeyId:async()=>{throw new Error("Not implemented")},getByUserId:async()=>{throw new Error("Not implemented")},getActiveCheckouts:async()=>{throw new Error("Not implemented")},getById:async()=>{throw new Error("Not implemented")},create:async()=>{throw new Error("Not implemented")},update:async()=>{throw new Error("Not implemented")}},this.auditLogs={getAll:async()=>{throw new Error("Not implemented")},getByUserId:async()=>{throw new Error("Not implemented")},create:async()=>{throw new Error("Not implemented")}},this.backup={export:async()=>{throw new Error("Not implemented")},import:async()=>{throw new Error("Not implemented")}}}async initialize(r){throw new Error("SQLite adapter not yet implemented. Coming soon!")}}export{t as SQLiteAdapter};
